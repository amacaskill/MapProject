Hope Crandall

a. 

r = p * q 
	set r = 0 
	foreach term tp in p:
		foreach term tq in q:
			multiply tp and tq 
			add the result to r 

b.

u = q * v + r 
	set q = 0 
	set r = u 
	foreach term tr in r:
		if the degree of the first nonzero term tu in u is <= the degree of the first 
		term in v, tv
			divide tv by tr
			add the result, tq, to q  
			multiply v by tq, as a new variable s 
			multiply s by -1 
			add s to r 
		else 
			break 
			
c. 

u = x^3 + x - 1 
v = x + 1 

q = 0
r = x^3 + x - 1 

foreach term, tu in u:
	Iteration 1: tv = x, tr = x^3, tq = x^2, q = x^2, r = -x^2 + x + 1
		if degree(tv) <= degree(tr) --> 1 < 3 YES 
			divide tv by tr: x^3 / x 
			add the result, tq = x^2, to q: q = (0)+ (x^2) 
			multiply v by tq, as a new variable s: s = (x + 1) * x^2 
			multiply s by -1: (-1) * (x^3 + x^2)
			add s to r: r = (x^3 + x - 1) + (-x^3 - x^2) 
	
	Iteration 2: tv = x, tr = -x^2, tq = -x, q = x^2 - x, r = 2x + 1 
		if degree(tv) <= degree(tr) --> 1 < 2 YES
			divide tv by tr: -x^2 / x
			add the result, tq = -x, to q: q = (x^2) + (-x)
			multiply v by tq, as a new variable s: s = (x + 1) * -x 
			multiply s by -1: s = (-1) * (-x^2 - x)
			add s to r: r = (-x^2 + x + 1) + (x^2 + x)
			
	Iteration 3: tv = x, tr = 2x, tq = 2, q = x^2 - x + 2, r = -1
		if degree(tv) <= degree(tr) --> 1 <= 1 YES
			divide tv by tr: 2x / x
			add the result, tq = 2, to q: q = (x^2 - x) + (2) 
			multiply v by tq, as a new variable s: s = (x + 1) * (2) 
			multiply s by -1 = (-1) * (2x + 2)
			add s to r: r = (2x + 1) + (-2x -2)

	Iteration 4:
		if degree(tv) <= degree(tr) --> 1 <= 0 NO
	
	Done: q = x^2 - x + 1 and r = -1 



